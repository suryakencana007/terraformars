version: "3.7"
services:
    agent:
        image: portainer/agent
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - /var/lib/docker/volumes:/var/lib/docker/volumes
        networks:
            - proxy
        deploy:
            mode: global
            placement:
                constraints: [node.platform.os == linux]

    portainer:
        image: portainer/portainer:latest
        command: -H tcp://tasks.agent:9001 --tlsskipverify
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - data:/data
        ports:
            - "8000:8000"
            - "9000:9000"
        networks:
            - proxy
        deploy:
            labels:
                #### Labels define the behavior and rules of the traefik proxy for this container ####
                #### Labels define the behavior and rules of the traefik proxy for this container ####
                - traefik.enable=true # <== Enable traefik on itself to view dashboard and assign subdomain to view it
                - traefik.tags=public
                - traefik.docker.network=proxy
                - traefik.http.routers.portainer-secured.entrypoints=web-secured
                - traefik.http.routers.portainer-secured.rule=Host(`portainer.aegis.gg`) # <== Setting the domain for the dashboard 
                
                - traefik.http.routers.portainer-secured.tls=true
                - traefik.http.routers.portainer-secured.tls.certresolver=mytlschallenge
                
                - traefik.http.routers.portainer-secured.service=portainer               
                - traefik.http.services.portainer.loadbalancer.server.port=9000
            mode: replicated
            replicas: 1
            placement:
                constraints: [node.role == manager]
            update_config:
                parallelism: 1
                delay: 10s
            restart_policy:
                condition: on-failure

volumes:
  data:

networks:
    proxy:
        external: true